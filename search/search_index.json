{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, Note 1 in <code>Topic 1</code></p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$...$</code>.</p> <p>For a block of math, use <code>$$...$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives </p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]"},{"location":"Features/Mermaid%20Diagrams/","title":"Mermaid diagrams","text":"<p>Here's the example from MkDocs Material documentation: </p> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":"<p>You can have lists like this</p> <ul> <li>first</li> <li>second</li> <li>third</li> </ul> <p>Or checklist lists to</p> <ul> <li> Get</li> <li> things</li> <li> done</li> </ul> <p>Also, get highlights and strikethroughs as above (similar to Obsidian).</p> <p>More formatting options for your webpage here. (but not compatible with Obsidian)</p>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/","title":"Introduction","text":"<p>GPU support on native-Windows is only available for 2.10 or earlier versions, starting in TF 2.11, CUDA build is not supported for Windows. For using TensorFlow GPU on Windows, you will need to build/install TensorFlow in WSL2  https://www.tensorflow.org/install/source_windows#gpu</p> <p>Conda installation guide: Installing on Linux, please run this command in WSL. (you can use curl or wget to grab the link to directly download to the current working directory)</p>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/#for-v2x","title":"For v2.x","text":"<p>For finding compatible CUDA and cuDNN versions for each Tensorflow Build from source \u00a0|\u00a0 TensorFlow. </p> <p>Before installation, make sure that you have NVIDIA Windows Driver installed, preferably, use the latest version, or at least R495 or driver to have CUDA support.</p>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/#install","title":"Install","text":"<pre><code>conda install -c conda-forge cudatoolkit=11.8.0\npython3 -m pip install nvidia-cudnn-cu11==8.6.0.163 tensorflow==2.12.*\nmkdir -p $CONDA_PREFIX/etc/conda/activate.d\necho 'CUDNN_PATH=$(dirname $(python -c \"import nvidia.cudnn;print(nvidia.cudnn.__file__)\"))' &gt;&gt; $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\necho 'export LD_LIBRARY_PATH=$CONDA_PREFIX/lib/:$CUDNN_PATH/lib:$LD_LIBRARY_PATH' &gt;&gt; $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\nsource $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\n# Verify install:\npython3 -c \"import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))\"\n</code></pre>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/#for-v1x","title":"For v1.x","text":"<p>With the release of TF 2.0, Google announced that new major releases will not be provided on the TF 1.x branch after the release of TF 1.15 on October 14. And older version of Tensorflow will need different version of CUDA and cuDNN. And also even you are able to find the older version of CUDA and cuDNN version on NVIDIA archives. RTX 30xx cards requires CUDA 10 and above.</p> <p>So in order to install TF v1, you can use a modified version of tensorflow from NVIDIA which makes it backward compatible for RTX 30xx cards and also for other GPU cards and this modified version of Tensorflow can also use the latest version of cuDNN.</p>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/#requirements","title":"Requirements","text":"<ul> <li>Ubuntu 20.04 or later (64-bit)</li> <li>GPU support requires a CUDA\u00ae-enabled card</li> <li>For NVIDIA GPUs, the r455 driver must be installed For wheel installation:</li> <li>Python 3.8</li> <li>pip 20.3 or later</li> </ul>"},{"location":"Installing%20Tensorflow%20on%20WSL/Installing%20Tensorflow%20v1%20or%20v2%20on%20WSL2%20%28Windows%20Subsystem%20on%20Linux%29%20using%20conda%20environment/#install_1","title":"Install","text":"<p><pre><code>$ pip install --user nvidia-pyindex\n$ pip install --user nvidia-tensorflow[horovod]\n</code></pre> The <code>nvidia-tensorflow</code> package includes CPU and GPU support for Linux. After that, you need to install <code>cuda-toolkit</code> and <code>nvidia-cudnn</code>. <pre><code>conda install -c conda-forge cudatoolkit=11.8.0\npython3 -m pip install nvidia-cudnn-cu11==8.6.0.163\nmkdir -p $CONDA_PREFIX/etc/conda/activate.d\n\necho 'CUDNN_PATH=$(dirname $(python -c \"import nvidia.cudnn;print(nvidia.cudnn.__file__)\"))' &gt;&gt; $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\n\necho 'export LD_LIBRARY_PATH=$CONDA_PREFIX/lib/:$CUDNN_PATH/lib:$LD_LIBRARY_PATH' &gt;&gt; $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\n\nsource $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh\n\n# Verify install:\npython3 -c \"import tensorflow as tf; tf.test.is_gpu_available()\"\n</code></pre> For newer CUDA versions and updated instructions. Install TensorFlow with pip If <code>CUDA</code> and <code>cuDNN</code> is correctly installed, then you can see in the last line of my GPU (RTX 3050 Laptop GPU). </p>"},{"location":"Topic%201/Note%201/","title":"Note 1","text":"<p>Example: link to Mermaid Diagrams under <code>Features</code></p>"},{"location":"Topic%201/Note%202/","title":"Note 2","text":""}]}